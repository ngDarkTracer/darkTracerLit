{"version":3,"file":"my-comp.js","sourceRoot":"","sources":["../../src/my-comp.ts"],"names":[],"mappings":";AAAC,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAI1D,IAAa,MAAM,GAAnB,MAAa,MAAO,SAAQ,UAAU;IAAtC;;QAYE,SAAI,GAAC,EAAE,CAAC;QAIR,QAAG,GAAC,EAAE,CAAC;IA6BT,CAAC;IA3BU,MAAM;QACb,OAAO,IAAI,CAAA;qDACqC,IAAI,CAAC,UAAU;wBAC5C,IAAI,CAAC,MAAM;gBACnB,IAAI,CAAC,GAAG;MAClB,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,CAAQ;QACf,MAAM,KAAK,GAAG,CAAC,CAAC,MAA0B,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,MAAM;QACL,KAAK,CAAC,6BAA6B,GAAG,IAAI,CAAC,IAAI,CAAC;aAC/C,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;YACjB,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,CAAC;aACD,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACf,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAa,CAAC;YAChC,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE;gBAC1C,MAAM,EAAE,EAAC,IAAI,EAAE,MAAM,CAAC,GAAG,EAAC;gBAC1B,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC,CAAA;QACL,CAAC,CAAC,CAAC;IACJ,CAAC;CACF,CAAA;AA5CiB,aAAM,GAAG,GAAG,CAAA;;;;;;;IAO1B,CAAA;AAIF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;oCACjB;AAIR;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;mCAClB;AAhBI,MAAM;IADlB,aAAa,CAAC,SAAS,CAAC;GACZ,MAAM,CA6ClB;SA7CY,MAAM","sourcesContent":[" import {LitElement, html, css} from 'lit';\r\n import {customElement, property} from 'lit/decorators.js';\r\n \r\n \r\n @customElement('my-comp')\r\n export class MyComp extends LitElement {\r\n   static override styles = css`\r\n     :host {\r\n       display: block;\r\n       border: solid 1px gray;\r\n       padding: 16px;\r\n       max-width: 800px;\r\n     }\r\n   `;\r\n \r\n   \r\n   @property({type: String})\r\n   name='';\r\n \r\n   \r\n   @property({type: String})\r\n   age='';\r\n \r\n   override render() {\r\n     return html`\r\n       <input type=\"text\" name=\"input-text\" @input=${this.updateName} placeholder=\"enter some text here...\"></input>\r\n       <button @click=${this.search}>Search</button>\r\n       <label>${this.age}</label>\r\n     `;\r\n   }\r\n\r\n   updateName(e: Event){\r\n       const input = e.target as HTMLInputElement;\r\n       this.name = input.value;\r\n   }\r\n\r\n   search(){\r\n    fetch('https://api.agify.io/?name=' + this.name)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      this.age = result.age as string;\r\n      this.dispatchEvent(new CustomEvent('myage', {\r\n        detail: {ages: result.age},\r\n        bubbles: true,\r\n        composed: true\r\n      }))\r\n    });\r\n   }\r\n }\r\n \r\n declare global {\r\n   interface HTMLElementTagNameMap {\r\n     'my-comp': MyComp;\r\n   }\r\n }\r\n \r\n\r\n"]}