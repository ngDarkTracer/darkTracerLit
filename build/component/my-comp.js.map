{"version":3,"file":"my-comp.js","sourceRoot":"","sources":["../../component/my-comp.ts"],"names":[],"mappings":";AAAC,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAI1D,IAAa,MAAM,GAAnB,MAAa,MAAO,SAAQ,UAAU;IAAtC;;QAiCE,SAAI,GAAC,EAAE,CAAC;QAIR,QAAG,GAAC,EAAE,CAAC;IA8BT,CAAC;IA5BU,MAAM;QACb,OAAO,IAAI,CAAA;;uDAEuC,IAAI,CAAC,UAAU;0BAC5C,IAAI,CAAC,MAAM;;MAE/B,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,CAAQ;QACf,MAAM,KAAK,GAAG,CAAC,CAAC,MAA0B,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,MAAM;QACL,KAAK,CAAC,6BAA6B,GAAG,IAAI,CAAC,IAAI,CAAC;aAC/C,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;YACjB,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,CAAC;aACD,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACf,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAa,CAAC;YAChC,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE;gBAC1C,MAAM,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,EAAC;gBAC1C,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC,CAAA;QACL,CAAC,CAAC,CAAC;IACJ,CAAC;CACF,CAAA;AAjEQ,aAAM,GAAG,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BpB,CAAC;AAID;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;oCACjB;AAIR;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;mCAClB;AArCI,MAAM;IADlB,aAAa,CAAC,SAAS,CAAC;GACZ,MAAM,CAmElB;SAnEY,MAAM","sourcesContent":[" import {LitElement, html, css} from 'lit';\n import {customElement, property} from 'lit/decorators.js';\n\n\n @customElement('my-comp')\n export class MyComp extends LitElement {\n\n   static styles = css `\n\n      div {\n        display: flex;\n        flex-direction: row;\n        flex-wrap: no-wrap;\n      }\n\n      input[type=text] {\n      width: 100%;\n      padding: 12px 20px;\n      margin: 8px 0;\n      display: inline-block;\n      border: 1px solid #ccc;\n      border-outline: none;\n      box-sizing: border-box;\n    }\n\n      button {\n      width: 40%;\n      background-color: #4CAF50;\n      color: white;\n      padding: 14px 20px;\n      margin: 8px 0;\n      border: none;\n      cursor: pointer;\n    }\n  `;\n\n\n   @property({type: String})\n   name='';\n\n\n   @property({type: String})\n   age='';\n\n   override render() {\n     return html`\n       <div>\n         <input type=\"text\" name=\"input-text\" @input=${this.updateName} placeholder=\"Enter a name...\"></input>\n         <button @click=${this.search}>Search</button>\n       </div>\n     `;\n   }\n\n   updateName(e: Event){\n       const input = e.target as HTMLInputElement;\n       this.name = input.value;\n   }\n\n   search(){\n    fetch('https://api.agify.io/?name=' + this.name)\n    .then((response) => {\n      return response.json();\n    })\n    .then((result) => {\n      this.age = result.age as string;\n      this.dispatchEvent(new CustomEvent('myage', {\n        detail: {name: this.name, age: result.age},\n        bubbles: true,\n        composed: true\n      }))\n    });\n   }\n }\n\n declare global {\n   interface HTMLElementTagNameMap {\n     'my-comp': MyComp;\n   }\n }\n\n\n"]}